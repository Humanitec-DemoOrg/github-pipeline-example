name: CI

on:
  workflow_dispatch:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    env:
      HUMANITEC_ORG: ${{ secrets.HUMANITEC_ORG }}
      HUMANITEC_TOKEN: ${{ secrets.HUMANITEC_TOKEN }}
      HUMANITEC_APP: ${{ secrets.HUMANITEC_APP }}
      HUMANITEC_URL: "https://api.humanitec.io"
      TFC_TOKEN: ${{ secrets.TFC_TOKEN }}
      TFC_ORG: ${{ secrets.TFC_ORG }}
      TFC_WORKSPACE: ${{ secrets.TFC_WORKSPACE }}
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}

    steps:
      - uses: actions/checkout@v3

      # prep work
      - run: |
          ls
          pwd
          echo $HOME
          mkdir $HOME/.bin
          echo $PATH
          echo $GITHUB_PATH
          echo "${HOME}/.bin" >> $GITHUB_PATH
          echo $PATH
          echo $GITHUB_PATH
      - run: |
          curl -L https://github.com/a8m/envsubst/releases/download/v1.4.2/envsubst-Linux-x86_64 -o ~/.bin/envsubst
          curl -L https://github.com/score-spec/score-humanitec/releases/download/0.5.0/score-humanitec_0.5.0_linux_amd64.tar.gz -o /tmp/score.tar.gz
          tar xvzf /tmp/score.tar.gz -C /tmp && cp /tmp/score-humanitec ~/.bin
          curl -L https://releases.hashicorp.com/terraform/1.4.6/terraform_1.4.6_linux_amd64.zip -o /tmp/terraform.zip
          unzip /tmp/terraform.zip && mv terraform ~/.bin
          chmod +x ~/.bin

          terraform --version
          jq --version
          score-humanitec --version

      # Humanitec resource definitions, state stored in Terraform Cloud
      - run: |
          cd humanitec-resource-definitions-terraform
          pwd && ls
          export TF_VAR_HUMANITEC_ORG=$HUMANITEC_ORG
          export TF_VAR_HUMANITEC_TOKEN=$HUMANITEC_TOKEN
          export TF_VAR_HUMANITEC_APP=$HUMANITEC_APP
          chmod +x tfcloud.sh && ./tfcloud.sh
          terraform init -upgrade
          terraform plan
          terraform apply -auto-approve

      # docker, and set the $IMAGE_NAME and use overrides later
      # currently using $IMAGE_NAME from the GitHub Variables
      # switch the image name to see changes for the diff

      # dev env
      - run: |
          cd score
          chmod +x deploy.sh
          # IMAGE_NAME="nginxdemos/hello:latest" envsubst < overrides.debug.yaml.example > overrides.debug.yaml
          echo $IMAGE_NAME
          envsubst < overrides.debug.yaml.example > overrides.debug.yaml
          HUMANITEC_ENVIRONMENT=development ./deploy.sh

      - name: Diff
        id: diff
        run: |
          echo "New DELTA"
          cat /tmp/new_delta.txt
          echo "Existing DELTA"
          cat /tmp/delta.txt
          echo "Diff"
          cat /tmp/diff.txt
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "diff<<$EOF" >> "$GITHUB_OUTPUT"
          cat /tmp/diff.txt >> "$GITHUB_OUTPUT"
          echo "$EOF" >> "$GITHUB_OUTPUT"
      - uses: mshick/add-pr-comment@v2
        with:
          allow-repeats: true
          message: |
            ```json
            ${{ steps.diff.outputs.diff }}
            ```
